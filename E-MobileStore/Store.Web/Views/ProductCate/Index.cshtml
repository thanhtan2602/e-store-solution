@model Store.Web.ViewsModel.ProductsByCateVM
@{
	ViewData["Title"] = "Product Cate Page";
	Layout = "_Layout";
	var totalProduct = ViewBag.TotalProduct;
}
<link href="~/css/layout/category.css" rel="stylesheet" />
<style>
    .item {
        display: none;
    }
        /* Ẩn tất cả sản phẩm ban đầu */
        .item.show {
            display: block;
        }
    /* Hiển thị sản phẩm khi có lớp 'show' */
</style>

<section>
    <a href="javascript:;" class="catename">
        <i class="logo-category">
            <img src="https://cdn.tgdd.vn/Category/10199/WMac-120x50-1.png" width="152" height="32" alt="">
        </i>
    </a>


    <div class="slide-cate owl-carousel owl-theme owl-loaded owl-drag">
       @await Html.PartialAsync("BannerCate",Model.Banners)
    </div>
	<div class="filter-cate">
		<div class="ft-sort">
			<a class="sText toggle-btn" style=" cursor: pointer;">Xếp theo: Mới nhất</a>
            <ul class="list-sort" style="display: none; z-index:10">
                <li>
                    <a href="#" class="check" data-sort="date_desc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Mới ra mắt</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-sort="date_asc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Mở bán Cũ - Mới</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-sort="name_asc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Tên A - Z</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-sort="name_desc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Tên Z - A</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-sort="price_asc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Giá tăng dần</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-sort="price_desc" data-id="@Model.Products.FirstOrDefault()?.CategoryId">
                        <i class="topzone-stick"></i>
                        <span>Giá giảm dần</span>
                    </a>
                </li>
            </ul>

		</div>
	</div>
	
	<div class="container-productbox" id="productListContainer">
		@await Html.PartialAsync("ListProduct", Model.Products)
		
	</div>
	<div class="view-more">
			<a href="#" id="loadMoreLink">
				Xem thêm <span class="remain">@(totalProduct-Model.Products.Count())</span> sản phẩm
			</a>
	</div>
    <script type="text/javascript">
        window.dataLayer = window.dataLayer || [];
        dataLayer.push({
            'pageType': 'Category',
            'pageCategoryLv1': 'Mac'
        })
    </script>

</section>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            //sort Product
            const toggleBtn = document.querySelector(".toggle-btn");
            const listSort = document.querySelector(".list-sort");
            const selectSort = document.querySelectorAll("ul.list-sort li a")
            const sText = document.querySelector(".sText")
            const viewMore = document.querySelector(".view-more");
            const remain = document.querySelector(".remain");
            toggleBtn.addEventListener("click", function () {
                toggleBtn.classList.toggle("active");
                listSort.style.display = (listSort.style.display === "none" || listSort.style.display === "") ? "block" : "none";
            });
            let pageSize = 6;
            let totalProduct = @totalProduct;
            //sort
            selectSort.forEach(function (item) {
                item.addEventListener("click", function (e) {
                    e.preventDefault();
                    const sortBy = item.getAttribute('data-sort')
                    const categoryId = item.getAttribute('data-id')
                    const selectedTex = item.querySelector("span").innerText;
                    sText.innerText = "Xếp theo: " + selectedTex;
                    selectSort.forEach(function (s) {
                        s.classList.remove("check");
                    })
                    this.classList.add("check");
                    listSort.style.display = "none";
                    const uri = urlRoot + "/productcate?categoryid=" + categoryId + "&sortBy=" + sortBy + "&pageSize=" + pageSize;
                    console.log("uri", uri)
                    loadProducts(uri);
                    updateViewMoreBuuton();
                });
            });
            // function to get list product
            function loadProducts(uri) {
                $.ajax({
                    type: "GET",
                    url: uri,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (data) {
                        document.getElementById("productListContainer").innerHTML = data;
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                        alert("check console to see proplem");
                    }
                });
            };
            // function to update view more button
            function updateViewMoreBuuton() {
                const remainingProducts = @totalProduct - pageSize;
                viewMore.style.display = (remainingProducts > 0) ? "" : "none";
                remain.innerText = remainingProducts;
                if (remainingProducts <= 0) {
                    viewMore.style.display ="none";
                }
            }
            //view more
            viewMore.addEventListener("click", function (e) {
                e.preventDefault();
                pageSize += 6;
                const categoryId = document.querySelector("ul.list-sort li a.check").getAttribute("data-id");
                const sortBy = document.querySelector("ul.list-sort li a.check").getAttribute("data-sort");
                console.log("categoryId", categoryId)
                console.log("sortBy", sortBy)
                const newUri = urlRoot + "/productcate?categoryid=" + categoryId + "&sortBy=" + sortBy + "&pageSize=" + pageSize;
                console.log("newUri", newUri)
                loadProducts(newUri);
                updateViewMoreBuuton();
            });
            updateViewMoreButton();
        });
    </script>
}